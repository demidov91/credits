@model Coffee.Entities.CreditLine

@{
    ViewBag.Title = "New";
}

<h2>New</h2>

@using (Html.BeginForm(FormMethod.Post)) {
    <span>Credit line name: </span>
    @Html.TextBoxFor(x => x.Name)

    <span>Credit line annual rate: </span>
    @Html.TextBoxFor(x => x.Rate)<span>%</span>
    
    <span>Credit line payments:</span>
    @Html.RadioButtonFor(x => x.KindOfPayments, Coffee.Entities.CreditLine.PaymentKind.ANNUITY,
        new Dictionary<string, object>{{ "checked", "checked" }, { "name", "payments" }} )
    @Html.RadioButtonFor(x => x.KindOfPayments, Coffee.Entities.CreditLine.PaymentKind.FACTICAL,
        new Dictionary<string, object>{{ "name", "payments" }})
    @Html.RadioButtonFor(x => x.KindOfPayments, Coffee.Entities.CreditLine.PaymentKind.PERCENTS_ONLY,
        new Dictionary<string, object>{{ "name", "payments" }})
                            
    <span>(leave field blank to specify no constraint)</span>
    <br />
    <span>Credit amount: from </span>
    @Html.TextBoxFor(x => x.MinAmountBoundary)
    <span> to </span>
    @Html.TextBoxFor(x => x.MaxAmountBoundary)
    <span> belorussian rubles</span>
    <br />
    
    <span>Target age category: from </span>
    @Html.TextBoxFor(x => x.MinAgeBoundary)
    <span> to </span>
    @Html.TextBoxFor(x => x.MaxAgeBoundary)
    <span> years</span>
    <br />
    
    <span>Credit period: from </span>
    @Html.TextBoxFor(x => x.MinMonthsBoundary)
    <span> to </span>
    @Html.TextBoxFor(x => x.MaxMonthsBoundary)
    <span> months</span>
    <br />
    
    <span>Minimum working time on current position: </span>
    @Html.TextBoxFor(x => x.MinWorkTimeBoundary)
    <br />

    <span>Minimum average salary: </span>
    @Html.TextBoxFor(x => x.MinAverageSalaryBoundary)
    <br />
    
    <input type="submit" value="Create" />
}

